name: backend-CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: install poetry
        uses: abatilo/actions-poetry@v2

      - name: setup virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: define cache for dependencies
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: install dependencies
        run: poetry install

      - name: run pytest
        run: poetry run pytest -v

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: install poetry
        uses: abatilo/actions-poetry@v2

      - name: setup virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: define cache for dependencies
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: install dependencies
        run: poetry install

      - name: setup SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: setup SAM credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::654654520699:role/buddy-system-github-role
          role-session-name: buddy-system-sam-github-action
          region: us-west-1

      - name: setup build directory
        run: |
          mkdir build
          poetry export -f requirements.txt --output build/requirements.txt --without-hashes
          cp -r backend ./build
          poetry run pyclean build/backend

      - name: build
        run: sam build

      - name: deploy
        run: sam deploy --no-fail-on-empty-changeset --stack-name buddy-system --parameter-overrides JwtKey=${{ secrets.JWT_KEY }}

